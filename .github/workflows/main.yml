# This is a basic workflow to help you get started with Actions.
name: Android CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 1. Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up JDK 11, which is commonly used for modern Android development
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      # 3. Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 4. Run the build to make sure the app compiles successfully
      - name: Build with Gradle
        run: ./gradlew build

      # 5. Run unit tests
      - name: Run unit tests
        run: ./gradlew test

      # (Optional) Step to build a debug APK
      # If you want the action to create the APK file, you can add this step.
      # You can then upload it as an artifact.
      # - name: Build debug APK
      #   run: ./gradlew assembleDebug

      # (Optional) Step to upload the APK artifact
      # - name: Upload APK
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: app-debug.apk
      #     path: app/build/outputs/apk/debug/app-debug.apk
